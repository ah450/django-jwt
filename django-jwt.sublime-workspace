{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"req",
				"request_with_slash"
			],
			[
				"get",
				"get_from_header"
			],
			[
				"get_",
				"get_from_params"
			],
			[
				"se",
				"send_order_saved_event"
			],
			[
				"event",
				"event_name"
			],
			[
				"trans",
				"transaction_id"
			],
			[
				"send",
				"send_transaction_created_event"
			],
			[
				"tr",
				"transacton"
			],
			[
				"tra",
				"transaction"
			],
			[
				"Tra",
				"Transaction"
			],
			[
				"eve",
				"event_data"
			],
			[
				"tran",
				"transaction"
			],
			[
				"payment",
				"payment_methods"
			],
			[
				"paymen",
				"payment_methods"
			],
			[
				"celer",
				"celeryApp"
			],
			[
				"HTT",
				"HTTP_200_OK"
			],
			[
				"val",
				"validated_data"
			],
			[
				"IF",
				"IFrameFactory"
			],
			[
				"HT",
				"HTTP_403_FORBIDDEN"
			],
			[
				"stat",
				"status_code"
			],
			[
				"M",
				"merchant"
			],
			[
				"HTTP",
				"HTTP_403_FORBIDDEN"
			],
			[
				"paym",
				"payment_methods"
			],
			[
				"cre",
				"create_payment_key"
			],
			[
				"Pay",
				"PaymentKeyDataFactory"
			],
			[
				"pa",
				"PaymentKeyDataFactory"
			],
			[
				"status",
				"status_code"
			],
			[
				"st",
				"status_code"
			],
			[
				"rai",
				"raise_exception"
			],
			[
				"Ifr",
				"IFrameSerializer"
			],
			[
				"If",
				"IFrame"
			],
			[
				"is",
				"isinstance"
			],
			[
				"payme",
				"payment_key"
			],
			[
				"ge",
				"get_key_user"
			],
			[
				"pars",
				"parse_payment_key_claims"
			],
			[
				"pay",
				"payment_key"
			],
			[
				"IFrame",
				"IFrameSerializer"
			],
			[
				"invalc",
				"invalid_configuration_handler"
			],
			[
				"insta",
				"install_error_handler"
			],
			[
				"crea",
				"create_payment_key"
			],
			[
				"IFra",
				"IFrameTemplate"
			],
			[
				"phon",
				"phone_number"
			],
			[
				"va",
				"ValidationError"
			],
			[
				"expir",
				"expiry_year"
			],
			[
				"Card",
				"CardToken"
			],
			[
				"from",
				"from_json"
			],
			[
				"ap",
				"api_key_exception_handler"
			],
			[
				"user",
				"user_id"
			],
			[
				"integ",
				"integration_query"
			],
			[
				"inte",
				"integration_query"
			],
			[
				"UI",
				"UIGOrderCreationResponse"
			],
			[
				"order",
				"order_id"
			],
			[
				"Paym",
				"PaymentMethodIntegration"
			],
			[
				"djang",
				"django_transaction"
			],
			[
				"in",
				"install_error_handler"
			],
			[
				"is_",
				"is_payment_locked"
			],
			[
				"am",
				"amount"
			],
			[
				"class",
				"classmethod"
			],
			[
				"UIG",
				"UIGTransactionSerializer"
			],
			[
				"b",
				"b64encode"
			],
			[
				"source",
				"source_data"
			],
			[
				"amo",
				"amount_cents"
			],
			[
				"clas",
				"classmethod"
			],
			[
				"Transa",
				"TransactionSerializer"
			]
		]
	},
	"buffers":
	[
		{
			"file": ".gitignore",
			"settings":
			{
				"buffer_size": 1055,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "README.md",
			"settings":
			{
				"buffer_size": 909,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "setup.py",
			"settings":
			{
				"buffer_size": 996,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "codeclimate.yml",
			"settings":
			{
				"buffer_size": 140,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 354.0,
		"last_filter": "prev",
		"selected_items":
		[
			[
				"prev",
				"Markdown Preview: Preview in Browser"
			],
			[
				"preview",
				"Markdown Preview: Preview in Browser"
			],
			[
				"diff",
				"Git: Diff Current File"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"mini",
				"View: Toggle Minimap"
			],
			[
				"instal",
				"Package Control: Install Package"
			]
		],
		"width": 431.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = 'df21e130d211cfc94d9b0905775a7c0f' + '1e3d39e33b79698005270310898eea76'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/ahi/Devel/repos/django-jwt",
		"/home/ahi/Devel/repos/django-jwt/django_jwt"
	],
	"file_history":
	[
		"/home/ahi/Devel/repos/django-jwt/django_jwt/drf_authentication/__init__.py",
		"/home/ahi/Devel/repos/django-jwt/django_jwt/mixins/__init__.py",
		"/home/ahi/Devel/repos/django-jwt/django_jwt/__init__.py",
		"/home/ahi/Devel/repos/django-jwt/tests/__init__.py",
		"/home/ahi/Devel/repos/drf-nested-field-multipart/drf_nested_field_multipart/parser.py",
		"/home/ahi/Devel/repos/drf-nested-field-multipart/setup.py",
		"/home/ahi/Devel/repos/drf-nested-field-multipart/drf_nested_field_multipart/__init__.py",
		"/home/ahi/Devel/repos/drf-nested-field-multipart/.gitignore",
		"/home/ahi/Devel/repos/drf-nested-field-multipart/README.md",
		"/home/ahi/Devel/repos/drf-ignore-slash-middleware/.gitignore",
		"/home/ahi/Devel/repos/drf-ignore-slash-middleware/MANIFEST.in",
		"/home/ahi/Devel/repos/drf-ignore-slash-middleware/tests/path_middleware_test.py",
		"/home/ahi/Devel/repos/drf-ignore-slash-middleware/drf_ignore_slash_middleware/slash_ignore_middleware.py",
		"/home/ahi/Devel/repos/drf-ignore-slash-middleware/README.md",
		"/home/ahi/Devel/repos/drf-ignore-slash-middleware/setup.py",
		"/home/ahi/Devel/repos/drf-ignore-slash-middleware/drf_ignore_slash_middleware/__init__.py",
		"/home/ahi/Devel/repos/drf-ignore-slash-middleware/LICENSE",
		"/home/ahi/Devel/repos/paymob/payment_methods/payment_methods/models/integration_unique_ref.py",
		"/home/ahi/Devel/repos/paymob/payment_methods/requirements.txt",
		"/home/ahi/Devel/repos/paymob/payment_methods/payment_methods/celery_tasks/processed_transaction_event.py",
		"/home/ahi/Devel/repos/paymob/payment_methods/payment_methods/views/wallet_callback.py",
		"/home/ahi/Devel/repos/paymob/payment_methods/payment_methods/views/payment_view.py",
		"/home/ahi/Devel/repos/paymob/payment_methods/payment_methods/payment_keys/parse_payment_key_claims.py",
		"/home/ahi/Devel/repos/paymob/payment_methods/payment_methods/tests/views/test_payments_view.py",
		"/home/ahi/Devel/repos/paymob/payment_methods/payment_methods/views/payment_view_bk.py",
		"/home/ahi/Devel/repos/paymob/payment_methods/payment_methods/authentication/payment_key.py",
		"/home/ahi/Devel/repos/paymob/payment_methods/payment_methods/views/iframe_view.py",
		"/home/ahi/Devel/repos/paymob/payment_methods/payment_methods/views/payment_keys.py",
		"/home/ahi/Devel/repos/paymob/payment_methods/payment_methods/serializers/payment_serializer.py",
		"/home/ahi/Devel/repos/paymob/payment_methods/payment_methods/payment_keys/create_payment_key.py",
		"/home/ahi/Devel/repos/paymob/payment_methods/payment_methods/authentication/__init__.py",
		"/home/ahi/Devel/repos/paymob/payment_methods/payment_methods/celery_tasks/three_d_secure_event.py",
		"/home/ahi/Devel/repos/paymob/payment_methods/payment_methods/settings.py",
		"/home/ahi/Devel/repos/paymob/payment_methods/payment_methods/celery_tasks/transaction_save_events.py",
		"/home/ahi/Devel/repos/paymob/payment_methods/payment_methods/celery_tasks/process_payment.py",
		"/home/ahi/Devel/repos/paymob/payment_methods/payment_methods/celery_tasks/celery.py",
		"/home/ahi/Devel/repos/paymob/payment_methods/payment_methods/celery_tasks/order_creation_tasks.py",
		"/home/ahi/Devel/repos/paymob/payment_methods/payment_methods/models/order_signals.py",
		"/home/ahi/Devel/repos/paymob/payment_methods/payment_methods/celery_tasks/__init__.py",
		"/home/ahi/Devel/repos/paymob/payment_methods/payment_methods/exception_handlers/invalid_configuration.py",
		"/home/ahi/Devel/repos/paymob/payment_methods/payment_methods/gateways/exceptions/invalid_config_exception.py",
		"/home/ahi/Devel/repos/paymob/payment_methods/payment_methods/gateways/exceptions/__init__.py",
		"/home/ahi/Devel/repos/paymob/payment_methods/payment_methods/exceptions/invalid_configuration_exception.py",
		"/home/ahi/Devel/repos/paymob/payment_methods/payment_methods/gateways/__init__.py",
		"/home/ahi/Devel/repos/paymob/payment_methods/payment_methods/models/signals.py",
		"/home/ahi/Devel/repos/paymob/payment_methods/payment_methods/models/__init__.py",
		"/home/ahi/Devel/repos/paymob/payment_methods/payment_methods/models/transaction_signals.py",
		"/home/ahi/Devel/repos/paymob/payment_methods/payment_methods/models/merchant_signals.py",
		"/home/ahi/Devel/repos/paymob/payment_methods/payment_methods/views/transaction_view.py",
		"/home/ahi/Devel/repos/paymob/payment_methods/payment_methods/celery_tasks/order_websocket_events.py",
		"/home/ahi/Devel/repos/paymob/payment_methods/payment_methods/serializers/transaction_serializer.py",
		"/home/ahi/Devel/repos/paymob/payment_methods/payment_methods/urls.py",
		"/home/ahi/Devel/repos/paymob/payment_methods/payment_methods/gateways/exceptions/gateway_3d_secure_exception.py",
		"/home/ahi/Devel/repos/paymob/payment_methods/payment_methods/tests/views/test_iframe_view.py",
		"/home/ahi/Devel/repos/paymob/payment_methods/payment_methods/serializers/iframe_serializer.py",
		"/home/ahi/Devel/repos/paymob/payment_methods/payment_methods/models/transaction.py",
		"/home/ahi/Devel/repos/paymob/payment_methods/payment_methods/models/iframes.py",
		"/home/ahi/Devel/repos/paymob/payment_methods/payment_methods/tests/gateways/cybersource/test_cybersource_gateway.py",
		"/home/ahi/Devel/repos/paymob/payment_methods/payment_methods/gateways/migs/v2/migs.py",
		"/home/ahi/Devel/repos/paymob/payment_methods/payment_methods/gateways/cybersource/cyber_source.py",
		"/home/ahi/Devel/repos/paymob/payment_methods/payment_methods/gateways/gateway.py",
		"/home/ahi/Devel/repos/paymob/payment_methods/payment_methods/gateways/migs/v1/vpc_gateway.py",
		"/home/ahi/Devel/repos/paymob/payment_methods/payment_methods/tests/gateways/migs/v1/test_vpc_gateway.py",
		"/home/ahi/Devel/repos/paymob/payment_methods/payment_methods/gateways/migs/v1/vpc_payment.py",
		"/home/ahi/Devel/repos/paymob/payment_methods/payment_methods/tests/gateways/migs/v1/test_vpc_payment.py",
		"/home/ahi/Devel/repos/paymob/payment_methods/payment_methods/views/vpc_callback.py",
		"/home/ahi/Devel/repos/paymob/payment_methods/payment_methods/serializers/backward_compat_response_serializer.py",
		"/home/ahi/Devel/repos/paymob/payment_methods/payment_methods/celery_tasks/transaction_callback.py",
		"/home/ahi/Devel/repos/paymob/payment_methods/payment_methods/factories/integrations/vpc_integration_factory.py",
		"/home/ahi/Devel/repos/paymob/payment_methods/payment_methods/factories/payment_key_data_factory.py",
		"/home/ahi/Devel/repos/paymob/payment_methods/payment_methods/serializers/payment_key_serializer.py",
		"/home/ahi/Devel/repos/paymob/payment_methods/payment_methods/tests/views/test_payment_keys_view.py",
		"/home/ahi/Devel/repos/paymob/payment_methods/payment_methods/tests/views/test_transaction_view.py",
		"/home/ahi/Devel/repos/paymob/payment_methods/payment_methods/factories/__init__.py",
		"/home/ahi/Devel/repos/paymob/payment_methods/payment_methods/factories/iframe_factory.py",
		"/home/ahi/Devel/repos/paymob/payment_methods/payment_methods/factories/transaction_factory.py",
		"/home/ahi/Devel/repos/paymob/payment_methods/payment_methods/templates/payment_iframe_render.html",
		"/home/ahi/Devel/repos/paymob/payment_methods/payment_methods/payment_keys/__init__.py",
		"/home/ahi/Devel/repos/paymob/payment_methods/payment_methods/templates/__init__.py",
		"/home/ahi/Devel/repos/paymob/payment_methods/payment_methods/models/iframe_templates.py",
		"/home/ahi/Devel/repos/paymob/payment_methods/payment_methods/exception_handlers/install_handler.py",
		"/home/ahi/Devel/repos/paymob/payment_methods/payment_methods/exceptions/__init__.py",
		"/home/ahi/Devel/repos/paymob/payment_methods/payment_methods/exception_handlers/payment_token.py",
		"/home/ahi/Devel/repos/paymob/payment_methods/payment_methods/exception_handlers/order_payment_locked.py",
		"/home/ahi/Devel/repos/paymob/payment_methods/payment_methods/test_suite_runner.py",
		"/home/ahi/Devel/repos/paymob/payment_methods/payment_methods/serializers/__init__.py",
		"/home/ahi/Devel/repos/paymob/payment_methods/setup.py",
		"/home/ahi/Devel/repos/paymob/payment_methods/payment_methods/exception_handlers/__init__.py",
		"/home/ahi/Devel/repos/paymob/payment_methods/payment_methods/views/token_view.py",
		"/home/ahi/Devel/repos/paymob/payment_methods/payment_methods/views/__init__.py",
		"/home/ahi/Devel/repos/paymob/payment_methods/payment_methods/views/backward_compat_views/serve_iframe_view.py",
		"/home/ahi/Devel/repos/paymob/payment_methods/payment_methods/serializers/source_serializer.py",
		"/home/ahi/Devel/repos/paymob/payment_methods/payment_methods/sources/wallet/wallet.py",
		"/home/ahi/Devel/repos/paymob/payment_methods/payment_methods/sources/card/card.py",
		"/home/ahi/Devel/repos/paymob/payment_methods/payment_methods/sources/source.py",
		"/home/ahi/Devel/repos/paymob/payment_methods/payment_methods/views/backward_compat_views/backward_compat_auth.py",
		"/home/ahi/Devel/repos/paymob/payment_methods/payment_methods/sources/__init__.py",
		"/home/ahi/Devel/repos/paymob/payment_methods/payment_methods/models/card_token.py",
		"/home/ahi/Devel/repos/paymob/payment_methods/payment_methods/exception_handlers/api_key_exception.py",
		"/home/ahi/Devel/repos/paymob/payment_methods/payment_methods/serializers/billing_data_serializer.py",
		"/home/ahi/Devel/repos/paymob/payment_methods/payment_methods/models/billing_data.py",
		"/home/ahi/Devel/repos/paymob/payment_methods/payment_methods/serializers/uig_serializers/transaction_serializer.py",
		"/home/ahi/Devel/repos/paymob/payment_methods/payment_methods/serializers/uig_serializers/order_serializer.py",
		"/home/ahi/Devel/repos/paymob/payment_methods/payment_methods/tests/views/test_wallet_callback_view.py",
		"/home/ahi/Devel/repos/paymob/payment_methods/payment_methods/serializers/wallet_notification_serializer.py",
		"/home/ahi/Devel/repos/paymob/payment_methods/payment_methods/celery_tasks/process_capture.py",
		"/home/ahi/Devel/repos/paymob/payment_methods/payment_methods/celery_tasks/process_authorize.py",
		"/home/ahi/Devel/repos/paymob/payment_methods/payment_methods/gateways/exceptions/vpc_3d_secure_exception.py",
		"/home/ahi/Devel/repos/paymob/payment_methods/payment_methods/models/uig_order_creation_response.py",
		"/home/ahi/Devel/repos/paymob/payment_methods/payment_methods/exceptions/order_payment_locked_exception.py",
		"/home/ahi/Devel/repos/paymob/payment_methods/payment_methods/exceptions/invalid_payment_token_exception.py",
		"/home/ahi/Devel/repos/paymob/payment_methods/payment_methods/gateways/wallet/wallet.py",
		"/home/ahi/Devel/repos/paymob/payment_methods/payment_methods/serializers/uig_serializers/__init__.py",
		"/home/ahi/Devel/repos/paymob/payment_methods/README.md",
		"/home/ahi/Devel/repos/paymob/payment_methods/payment_methods.sublime-project",
		"/home/ahi/Devel/repos/paymob/payment_methods/payment_methods/factories/integrations/cybersource_integration_factory.py",
		"/home/ahi/Devel/repos/paymob/payment_methods/payment_methods/factories/integrations/wallet_integration_factory.py",
		"/home/ahi/Devel/repos/paymob/payment_methods/payment_methods/factories/integrations/__init__.py",
		"/home/ahi/Devel/repos/paymob/payment_methods/env/src/paymob-ecommerce/paymob_ecommerce/serializers/apikey_integration_serializer.py",
		"/home/ahi/Devel/repos/paymob/payment_methods/payment_methods/serializers/token_serializer.py"
	],
	"find":
	{
		"height": 25.0
	},
	"find_in_files":
	{
		"height": 90.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"update",
			"websocket",
			"select_for_update",
			"lock",
			"payment",
			"parse_payment_key_claims",
			"self.retry",
			"retry",
			"InvalidConfigException",
			"order",
			"order.",
			"transaction.pk",
			"ref",
			"VPCPayment",
			"related_name",
			"generate",
			"IntegrationUniqueRef",
			"pay_online",
			"transaction.pk",
			"OnlinePayment_Response",
			"process_payment",
			"bind",
			"parse_payment_key_claims",
			"self, ",
			"self,",
			"InvalidConfigurationException",
			"None",
			"transaction",
			"VPCCallback",
			"vpc_callback",
			"InvalidAPIKeyException",
			"subtypes",
			"SourceSerializer",
			"currency",
			"transaction_processed_callback_response",
			"transaction_success_endpoint",
			"for_update",
			"select_for",
			"VPC3DSecureException",
			"settings",
			"legacy_callback",
			"process_transaction_helper",
			"get_integration_helper",
			"integration",
			"print",
			"uig_ip",
			"read_only=True",
			"order",
			"write",
			"celery",
			"awb",
			"get_masked_data",
			"OrderedDict",
			"json"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"",
			"Gateway3DSecureException",
			""
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 2,
			"sheets":
			[
				{
					"buffer": 0,
					"file": ".gitignore",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1055,
						"regions":
						{
						},
						"selection":
						[
							[
								1055,
								1055
							]
						],
						"settings":
						{
							"syntax": "Packages/Materialize/Langs/Git.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 855.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "README.md",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 909,
						"regions":
						{
						},
						"selection":
						[
							[
								869,
								869
							]
						],
						"settings":
						{
							"auto_name": "",
							"parser": "github",
							"syntax": "Packages/Markdown/Markdown.sublime-syntax",
							"target": "browser"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "setup.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 996,
						"regions":
						{
						},
						"selection":
						[
							[
								635,
								635
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "codeclimate.yml",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 140,
						"regions":
						{
						},
						"selection":
						[
							[
								49,
								49
							]
						],
						"settings":
						{
							"syntax": "Packages/YAML/YAML.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 25.0
	},
	"input":
	{
		"height": 66.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "django-jwt.sublime-project",
	"replace":
	{
		"height": 46.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"read",
				"README.md"
			],
			[
				"par",
				"drf_nested_field_multipart/parser.py"
			],
			[
				"set",
				"setup.py"
			],
			[
				".git",
				".gitignore"
			],
			[
				"man",
				"MANIFEST.in"
			],
			[
				".gi",
				".gitignore"
			],
			[
				"path",
				"tests/path_middleware_test.py"
			],
			[
				"pathmi",
				"tests/path_middleware_test.py"
			],
			[
				"ref",
				"payment_methods/models/integration_unique_ref.py"
			],
			[
				"wall",
				"payment_methods/views/wallet_callback.py"
			],
			[
				"testpa",
				"payment_methods/tests/views/test_payments_view.py"
			],
			[
				"paymse",
				"payment_methods/serializers/payment_serializer.py"
			],
			[
				"crea",
				"payment_methods/payment_keys/create_payment_key.py"
			],
			[
				"paymke",
				"payment_methods/views/payment_keys.py"
			],
			[
				"parsepa",
				"payment_methods/payment_keys/parse_payment_key_claims.py"
			],
			[
				"paymevi",
				"payment_methods/views/payment_view.py"
			],
			[
				"req",
				"requirements.txt"
			],
			[
				"cele",
				"payment_methods/celery_tasks/celery.py"
			],
			[
				"thre",
				"payment_methods/celery_tasks/three_d_secure_event.py"
			],
			[
				"gateexc",
				"payment_methods/gateways/exceptions/invalid_config_exception.py"
			],
			[
				"coexc",
				"payment_methods/exceptions/invalid_configuration_exception.py"
			],
			[
				"invalco",
				"payment_methods/exception_handlers/invalid_configuration.py"
			],
			[
				"invalc",
				"payment_methods/exception_handlers/invalid_configuration.py"
			],
			[
				"gateini",
				"payment_methods/gateways/__init__.py"
			],
			[
				"modelsini",
				"payment_methods/models/__init__.py"
			],
			[
				"signa",
				"payment_methods/models/signals.py"
			],
			[
				"signalin",
				"payment_methods/gateways/exceptions/invalid_config_exception.py"
			],
			[
				"signal",
				"payment_methods/models/transaction_signals.py"
			],
			[
				"sign",
				"payment_methods/models/order_signals.py"
			],
			[
				"transav",
				"payment_methods/celery_tasks/transaction_save_events.py"
			],
			[
				"tras",
				"payment_methods/models/transaction_signals.py"
			],
			[
				"creatta",
				"payment_methods/celery_tasks/order_creation_tasks.py"
			],
			[
				"transsi",
				"payment_methods/models/transaction_signals.py"
			],
			[
				"mod",
				"payment_methods/models/__init__.py"
			],
			[
				"orders",
				"payment_methods/models/order_signals.py"
			],
			[
				"transaser",
				"payment_methods/serializers/transaction_serializer.py"
			],
			[
				"procpa",
				"payment_methods/celery_tasks/process_payment.py"
			],
			[
				"event",
				"payment_methods/celery_tasks/processed_transaction_event.py"
			],
			[
				"ordcr",
				"payment_methods/celery_tasks/order_creation_tasks.py"
			],
			[
				"proc",
				"payment_methods/celery_tasks/processed_transaction_event.py"
			],
			[
				"url",
				"payment_methods/urls.py"
			],
			[
				"signals",
				"payment_methods/models/merchant_signals.py"
			],
			[
				"ordes",
				"payment_methods/models/order_signals.py"
			],
			[
				"modelsin",
				"payment_methods/models/__init__.py"
			],
			[
				"celeri",
				"payment_methods/celery_tasks/__init__.py"
			],
			[
				"3d",
				"payment_methods/gateways/exceptions/gateway_3d_secure_exception.py"
			],
			[
				"th",
				"payment_methods/celery_tasks/three_d_secure_event.py"
			],
			[
				"3ds",
				"payment_methods/gateways/exceptions/gateway_3d_secure_exception.py"
			],
			[
				"testif",
				"payment_methods/tests/views/test_iframe_view.py"
			],
			[
				"iframv",
				"payment_methods/views/iframe_view.py"
			],
			[
				"oframse",
				"payment_methods/serializers/iframe_serializer.py"
			],
			[
				"sett",
				"payment_methods/settings.py"
			],
			[
				"ifr",
				"payment_methods/models/iframes.py"
			],
			[
				"trans",
				"payment_methods/models/transaction.py"
			],
			[
				"inte",
				"payment_methods/models/integration_unique_ref.py"
			],
			[
				"procp",
				"payment_methods/celery_tasks/process_payment.py"
			],
			[
				"tran",
				"payment_methods/models/transaction.py"
			],
			[
				"protr",
				"payment_methods/celery_tasks/processed_transaction_event.py"
			],
			[
				"celeryin",
				"payment_methods/celery_tasks/__init__.py"
			],
			[
				"testc",
				"payment_methods/tests/gateways/cybersource/test_cybersource_gateway.py"
			],
			[
				"migs",
				"payment_methods/gateways/migs/v2/migs.py"
			],
			[
				"cybe",
				"payment_methods/gateways/cybersource/cyber_source.py"
			],
			[
				"gate",
				"payment_methods/gateways/gateway.py"
			],
			[
				"vpcga",
				"payment_methods/gateways/migs/v1/vpc_gateway.py"
			],
			[
				"cyber",
				"payment_methods/gateways/cybersource/cyber_source.py"
			],
			[
				"gatew.",
				"payment_methods/gateways/gateway.py"
			],
			[
				"vpcpa",
				"payment_methods/gateways/migs/v1/vpc_payment.py"
			],
			[
				"vpcgate",
				"payment_methods/gateways/migs/v1/vpc_gateway.py"
			],
			[
				"cybers",
				"payment_methods/gateways/cybersource/cyber_source.py"
			],
			[
				"integ",
				"payment_methods/models/integration_unique_ref.py"
			],
			[
				"testvpc",
				"payment_methods/tests/gateways/migs/v1/test_vpc_gateway.py"
			],
			[
				"testvp",
				"payment_methods/tests/gateways/migs/v1/test_vpc_payment.py"
			],
			[
				"paymev",
				"payment_methods/views/payment_view.py"
			],
			[
				"gatewayv",
				"payment_methods/gateways/migs/v1/vpc_gateway.py"
			],
			[
				"paymvi",
				"payment_methods/views/payment_view.py"
			],
			[
				"celerin",
				"payment_methods/celery_tasks/__init__.py"
			],
			[
				"celer",
				"payment_methods/celery_tasks/celery.py"
			],
			[
				"callba",
				"payment_methods/views/vpc_callback.py"
			],
			[
				"proce",
				"payment_methods/celery_tasks/process_payment.py"
			],
			[
				"celein",
				"payment_methods/celery_tasks/__init__.py"
			],
			[
				"transc",
				"payment_methods/celery_tasks/transaction_callback.py"
			],
			[
				"merch",
				"payment_methods/models/merchant_signals.py"
			],
			[
				"mers",
				"payment_methods/models/merchant_signals.py"
			],
			[
				"modini",
				"payment_methods/models/__init__.py"
			],
			[
				"modelini",
				"payment_methods/models/__init__.py"
			],
			[
				"ifrase",
				"payment_methods/serializers/iframe_serializer.py"
			],
			[
				"create",
				"payment_methods/payment_keys/create_payment_key.py"
			],
			[
				"parspa",
				"payment_methods/payment_keys/parse_payment_key_claims.py"
			],
			[
				"paykeda",
				"payment_methods/factories/payment_key_data_factory.py"
			],
			[
				"vpc",
				"payment_methods/factories/integrations/vpc_integration_factory.py"
			],
			[
				"paykes",
				"payment_methods/serializers/payment_key_serializer.py"
			],
			[
				"testpake",
				"payment_methods/tests/views/test_payment_keys_view.py"
			],
			[
				"paykef",
				"payment_methods/factories/payment_key_data_factory.py"
			],
			[
				"testtra",
				"payment_methods/tests/views/test_transaction_view.py"
			],
			[
				"trafa",
				"payment_methods/factories/transaction_factory.py"
			],
			[
				"iframe",
				"payment_methods/models/iframes.py"
			],
			[
				"facin",
				"payment_methods/factories/__init__.py"
			],
			[
				"ur",
				"payment_methods/urls.py"
			],
			[
				"testviw",
				"payment_methods/tests/views/test_payments_view.py"
			],
			[
				"iframs",
				"payment_methods/serializers/iframe_serializer.py"
			],
			[
				"ifra",
				"payment_methods/models/iframes.py"
			],
			[
				"parse",
				"payment_methods/payment_keys/parse_payment_key_claims.py"
			],
			[
				"callb",
				"payment_methods/celery_tasks/transaction_callback.py"
			],
			[
				"ifrse",
				"payment_methods/serializers/iframe_serializer.py"
			],
			[
				"templ",
				"payment_methods/models/iframe_templates.py"
			],
			[
				"ifraser",
				"payment_methods/serializers/iframe_serializer.py"
			],
			[
				"transvi",
				"payment_methods/views/transaction_view.py"
			],
			[
				"exceptioninit",
				"payment_methods/exceptions/__init__.py"
			],
			[
				"creat",
				"payment_methods/payment_keys/create_payment_key.py"
			],
			[
				"testsu",
				"payment_methods/test_suite_runner.py"
			],
			[
				"handle",
				"payment_methods/exception_handlers/install_handler.py"
			],
			[
				"iframevi",
				"payment_methods/views/iframe_view.py"
			],
			[
				"serialinit",
				"payment_methods/serializers/__init__.py"
			],
			[
				"ifravi",
				"payment_methods/views/iframe_view.py"
			],
			[
				"paymkeda",
				"payment_methods/factories/payment_key_data_factory.py"
			],
			[
				"testpay",
				"payment_methods/tests/views/test_payment_keys_view.py"
			],
			[
				"paymeke",
				"payment_methods/views/payment_keys.py"
			],
			[
				"pmexini",
				"payment_methods/exception_handlers/__init__.py"
			],
			[
				"payme",
				"payment_methods/views/payment_keys.py"
			],
			[
				"pay",
				"payment_methods/views/payment_view.py"
			],
			[
				"token",
				"payment_methods/views/token_view.py"
			],
			[
				"paymentke",
				"payment_methods/serializers/payment_key_serializer.py"
			],
			[
				"view.p",
				"payment_methods/views/transaction_view.py"
			],
			[
				"tokenv",
				"payment_methods/views/token_view.py"
			],
			[
				"servi",
				"payment_methods/views/backward_compat_views/serve_iframe_view.py"
			],
			[
				"view",
				"payment_methods/views/__init__.py"
			],
			[
				"model",
				"payment_methods/models/__init__.py"
			],
			[
				"compa",
				"payment_methods/views/backward_compat_views/backward_compat_auth.py"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "acc",
		"selected_items":
		[
			[
				"acc",
				"~/Devel/repos/paymob/paymob_accept/paymob-accept.sublime-project"
			],
			[
				"eco",
				"~/Devel/repos/paymob/paymob_ecommerce/ecommerce.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 299.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
